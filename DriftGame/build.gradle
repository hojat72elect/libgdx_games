plugins {
    id 'java'
    id 'application'
    id 'distribution'
    id 'org.jetbrains.kotlin.jvm'
}

// Define the main class for the application
mainClassName = 'com.bitfire.uracer.URacerDesktop'

// import our simple git version tokenizer
apply from: "${rootDir}/versioninfo.gradle"
def (versionName, versionNameShort, versionCode) = getVersionInfo()

// apply version
version = versionName

dependencies {
    implementation fileTree(dir: 'libs/jars/', include: ['*.jar'])
    implementation fileTree(dir: 'libs/jars/gdx', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

task versionUpdater() {
    def versionFilePath = "${rootDir}/uracer-desktop/src/com/bitfire/uracer/VersionInfo.java"
    def versionFile = new File(versionFilePath)
    if (versionName) {
        println "Version is " + versionName + " (" + versionCode.toString() + ")"
        println "Writing to ${versionFilePath}"

        versionFile.write "package com.bitfire.uracer;\n\n" +
                "public final class VersionInfo {\n" +
                "\tpublic static final String versionName = \"${versionName}\";\n" +
                "\tpublic static final Integer versionCode = ${versionCode};\n\n" +
                "\tprivate VersionInfo() {\n\t}\n" +
                "}"
    } else {
        println "Unknown uRacer version, this will be an unversioned build"
        versionFile.delete()
    }
}

sourceSets {
    main {
        java.srcDirs = [
                'uracer-desktop/src',
                'libs/src/box2dlights/box2dLight/src',
                'libs/src/java-universal-tween-engine/tween-engine-api/src'
        ]
    }
}

repositories {
    mavenCentral()
}
compileKotlin {
}
