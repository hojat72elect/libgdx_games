// automatically generated by the FlatBuffers compiler, do not modify

package com.riiablo.net.packet.d2gs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ClassP extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static ClassP getRootAsClassP(ByteBuffer _bb) { return getRootAsClassP(_bb, new ClassP()); }
  public static ClassP getRootAsClassP(ByteBuffer _bb, ClassP obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ClassP __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int type() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }

  public static int createClassP(FlatBufferBuilder builder,
      int type) {
    builder.startTable(1);
    ClassP.addType(builder, type);
    return ClassP.endClassP(builder);
  }

  public static void startClassP(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addType(FlatBufferBuilder builder, int type) { builder.addByte(0, (byte)type, (byte)0); }
  public static int endClassP(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ClassP get(int j) { return get(new ClassP(), j); }
    public ClassP get(ClassP obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

