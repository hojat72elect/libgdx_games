apply plugin: 'java'
apply plugin: 'application'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets.main.resources.srcDirs += [ rootProject.file('assets').path ]

project.ext {
  visuiVersion = '1.4.0'
}

dependencies {
  implementation project(':core')
  implementation "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
  implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

  implementation "commons-cli:commons-cli:$cliVersion"
  implementation "com.kotcrab.vis:vis-ui:$visuiVersion"
}

description = 'View and debug DS1 prefabs.'
application {
  mainClass = 'com.riiablo.map.DS1Viewer'
}

run {
  workingDir = rootProject.file('assets').path
  setIgnoreExitValue(true)

  // Required to run LWJGL3 java apps on MacOS
  if (org.gradle.internal.os.OperatingSystem.current() == org.gradle.internal.os.OperatingSystem.MAC_OS) {
    jvmArgs += "-XstartOnFirstThread"
  }
}

jar {
  archiveBaseName = project.name
  // These can be excluded because they add to the jar size but libGDX 1.9.11 can't use them.
  // If your libGDX version is 1.9.10 or earlier, or is 1.9.12-SNAPSHOT or later, you can leave
  // the following line commented; if you use 1.9.11 exactly, or if you use 1.9.12-SNAPSHOT but
  // don't need ARM Linux support, you can uncomment it safely.
  // It's always safe to keep that line commented out; it only affects JAR size.
  // exclude('linux/arm32/**', 'linux/arm64/**')
  dependsOn configurations.runtimeClasspath
  from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
  manifest {
    attributes 'Main-Class': application.mainClass
  }

  doLast {
    file(archiveFile).setExecutable(true, false)
  }
}
